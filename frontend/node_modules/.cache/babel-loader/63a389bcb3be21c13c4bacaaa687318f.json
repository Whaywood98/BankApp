{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lalas2hot/Desktop/GitHub/Capstone/frontend/src/components/CreateAccountComponent.js\";\nimport React, { Component } from 'react';\nimport { Control, LocalForm, Form, Errors } from 'react-redux-form';\nimport { Row, Col, Label, Button, Input } from 'reactstrap';\nimport { addUser } from '../redux/ActionCreators';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { baseUrlLocal } from '../shared/baseUrl';\nimport UserServices from '../services/UserServices';\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: () => dispatch(addUser())\n});\n\nclass CreateAccount extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const data = this.state;\n      UserServices.postAccount(this.state.accountType, this.props.user.userName, data);\n      UserServices.getUserById(this.props.user.userName).then(response => this.props.dispatch(addUser(response.data)));\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      accountType: 'Checking Account',\n      balance: null,\n      interestRate: null\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [\"Account Type: \", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"accountType\",\n          onChange: this.handleInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            onClick: this.setAccountType,\n            children: \"Checking Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            onClick: this.setAccountType,\n            children: \"Savings Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            onClick: this.setAccountType,\n            children: \"Personal Checking Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            onClick: this.setAccountType,\n            children: \"DBA Checking Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            onClick: this.setAccountType,\n            children: \"Certificate of Deposit Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            onClick: this.setAccountType,\n            children: \"Regular IRA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            onClick: this.setAccountType,\n            children: \"Rollover IRA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            onClick: this.setAccountType,\n            children: \"Roth IRA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), \"Opening Balance: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"balance\",\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), \"Interest Rate: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"select\",\n          name: \"interestRate\",\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withRouter(connect(mapDispatchToProps)(CreateAccount));","map":{"version":3,"sources":["/Users/lalas2hot/Desktop/GitHub/Capstone/frontend/src/components/CreateAccountComponent.js"],"names":["React","Component","Control","LocalForm","Form","Errors","Row","Col","Label","Button","Input","addUser","withRouter","connect","baseUrlLocal","UserServices","mapDispatchToProps","dispatch","CreateAccount","constructor","props","handleSubmit","event","preventDefault","data","state","postAccount","accountType","user","userName","getUserById","then","response","handleInputChange","setState","target","name","value","balance","interestRate","bind","render","setAccountType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Control, LocalForm, Form, Errors } from 'react-redux-form';\nimport { Row, Col, Label, Button, Input } from 'reactstrap';\nimport { addUser } from '../redux/ActionCreators';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { baseUrlLocal } from '../shared/baseUrl';\nimport UserServices from '../services/UserServices';\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    addUser: () => dispatch(addUser()),\n});\n\nclass CreateAccount extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            accountType: 'Checking Account',\n            balance: null,\n            interestRate: null\n            \n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const data = this.state;\n        UserServices.postAccount(this.state.accountType, this.props.user.userName, data);\n        UserServices.getUserById(this.props.user.userName)\n            .then((response) => this.props.dispatch(addUser(response.data)));\n    }\n\n    handleInputChange = (event) => {\n        event.preventDefault()\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    render(){\n        return(\n            \n            <div>\n                \n                <h3>Register</h3>\n                <form onSubmit={this.handleSubmit}>\n                    Account Type: <select name=\"accountType\" onChange={this.handleInputChange}>\n                                    <option onClick={this.setAccountType}>Checking Account</option>\n                                    <option onClick={this.setAccountType}>Savings Account</option> \n                                    <option onClick={this.setAccountType}>Personal Checking Account</option> \n                                    <option onClick={this.setAccountType}>DBA Checking Account</option> \n                                    <option onClick={this.setAccountType}>Certificate of Deposit Account</option> \n                                    <option onClick={this.setAccountType}>Regular IRA</option> \n                                    <option onClick={this.setAccountType}>Rollover IRA</option> \n                                    <option onClick={this.setAccountType}>Roth IRA</option> \n                                    </select>\n                    <br/>\n                    Opening Balance: <input type= \"text\" name= \"balance\" onChange={this.handleInputChange}/>\n                    <br/>\n                    Interest Rate: <input type= \"select\" name=\"interestRate\" onChange={this.handleInputChange}/>\n                    <br/>\n                    <input type =\"submit\" value= \"Create Account\" />\n\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapDispatchToProps)(CreateAccount));"]},"metadata":{},"sourceType":"module"}