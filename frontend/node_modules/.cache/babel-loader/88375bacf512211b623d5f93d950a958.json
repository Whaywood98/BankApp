{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { SAVINGS_ACCOUNT } from '../shared/savingsAccount';\nimport { CHECKING_ACCOUNTS } from '../shared/checkingAccounts';\nimport { CDACCOUNTS } from '../shared/cdAccounts';\nimport { PERSONAL_CHECKING_ACCOUNT } from '../shared/personalCheckingAccount';\nimport { DBA_CHECKING_ACCOUNTS } from '../shared/dbaCheckingAccounts';\nimport { IRA } from '../shared/ira';\nimport baseUrl from '../shared/baseUrl';\nexport const fetchSavingsAccount = () => dispatch => {\n  dispatch(savingsAccountLoading(true));\n  dispatch(addSavingsAccount(SAVINGS_ACCOUNT));\n};\nexport const fetchCheckingAccounts = () => dispatch => {\n  dispatch(checkingAccountLoading(true));\n  dispatch(addCheckingAccount(CHECKING_ACCOUNTS));\n};\nexport const fetchCdAccounts = () => dispatch => {\n  dispatch(cdAccountLoading(true));\n  dispatch(addCdAccount(CDACCOUNTS));\n};\nexport const fetchPersonalCheckingAccount = () => dispatch => {\n  dispatch(personalCheckingAccountLoading(true));\n  dispatch(addPersonalCheckingAccount(PERSONAL_CHECKING_ACCOUNT));\n};\nexport const fetchDbaCheckingAccounts = () => dispatch => {\n  dispatch(dbaCheckingAccountLoading(true));\n  dispatch(addDbaCheckingAccount(DBA_CHECKING_ACCOUNTS));\n};\nexport const savingsAccountFailed = errmess => ({\n  type: ActionTypes.SAVINGS_ACCOUNT_FAILED,\n  payload: errmess\n});\nexport const checkingAccountsFailed = errmess => ({\n  type: ActionTypes.CHECKING_ACCOUNTS_FAILED,\n  payload: errmess\n});\nexport const cdAccountsFailed = errmess => ({\n  type: ActionTypes.CDACCOUNT_FAILED,\n  payload: errmess\n});\nexport const personalCheckingAccountFailed = errmess => ({\n  type: ActionTypes.PERSONAL_CHECKING_ACCOUNT_FAILED,\n  payload: errmess\n});\nexport const dbaCheckingAccountsFailed = errmess => ({\n  type: ActionTypes.DBA_CHECKING_ACCOUNT_FAILED,\n  payload: errmess\n});\nexport const addSavingsAccount = account => ({\n  type: ActionTypes.ADD_SAVINGS_ACCOUNT,\n  payload: account\n});\nexport const addCheckingAccount = accounts => ({\n  type: ActionTypes.ADD_CHECKING_ACCOUNTS,\n  payload: accounts\n});\nexport const addCdAccount = accounts => ({\n  type: ActionTypes.ADD_CDACCOUNT,\n  payload: accounts\n});\nexport const addPersonalCheckingAccount = accounts => ({\n  type: ActionTypes.ADD_PERSONAL_CHECKING_ACCOUNT,\n  payload: accounts\n});\nexport const addDbaCheckingAccount = accounts => ({\n  type: ActionTypes.ADD_DBA_CHECKING_ACCOUNT,\n  payload: accounts\n});\nexport const savingsAccountLoading = () => ({\n  type: ActionTypes.SAVINGS_ACCOUNT_LOADING\n});\nexport const checkingAccountLoading = () => ({\n  type: ActionTypes.CHECKING_ACCOUNTS_LOADING\n});\nexport const cdAccountLoading = () => ({\n  type: ActionTypes.CDACCOUNT_LOADING\n});\nexport const personalCheckingAccountLoading = () => ({\n  type: ActionTypes.PERSONAL_CHECKING_ACCOUNT_LOADING\n});\nexport const dbaCheckingAccountLoading = () => ({\n  type: ActionTypes.DBA_CHECKING_ACCOUNT_LOADING\n});","map":{"version":3,"sources":["C:/users/willi/eclipse-workspace/Capstone/frontend/src/redux/ActionCreators.js"],"names":["ActionTypes","SAVINGS_ACCOUNT","CHECKING_ACCOUNTS","CDACCOUNTS","PERSONAL_CHECKING_ACCOUNT","DBA_CHECKING_ACCOUNTS","IRA","baseUrl","fetchSavingsAccount","dispatch","savingsAccountLoading","addSavingsAccount","fetchCheckingAccounts","checkingAccountLoading","addCheckingAccount","fetchCdAccounts","cdAccountLoading","addCdAccount","fetchPersonalCheckingAccount","personalCheckingAccountLoading","addPersonalCheckingAccount","fetchDbaCheckingAccounts","dbaCheckingAccountLoading","addDbaCheckingAccount","savingsAccountFailed","errmess","type","SAVINGS_ACCOUNT_FAILED","payload","checkingAccountsFailed","CHECKING_ACCOUNTS_FAILED","cdAccountsFailed","CDACCOUNT_FAILED","personalCheckingAccountFailed","PERSONAL_CHECKING_ACCOUNT_FAILED","dbaCheckingAccountsFailed","DBA_CHECKING_ACCOUNT_FAILED","account","ADD_SAVINGS_ACCOUNT","accounts","ADD_CHECKING_ACCOUNTS","ADD_CDACCOUNT","ADD_PERSONAL_CHECKING_ACCOUNT","ADD_DBA_CHECKING_ACCOUNT","SAVINGS_ACCOUNT_LOADING","CHECKING_ACCOUNTS_LOADING","CDACCOUNT_LOADING","PERSONAL_CHECKING_ACCOUNT_LOADING","DBA_CHECKING_ACCOUNT_LOADING"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { SAVINGS_ACCOUNT } from '../shared/savingsAccount';\r\nimport { CHECKING_ACCOUNTS } from '../shared/checkingAccounts';\r\nimport { CDACCOUNTS } from '../shared/cdAccounts';\r\nimport { PERSONAL_CHECKING_ACCOUNT } from '../shared/personalCheckingAccount';\r\nimport { DBA_CHECKING_ACCOUNTS } from '../shared/dbaCheckingAccounts';\r\nimport { IRA } from '../shared/ira';\r\nimport baseUrl from '../shared/baseUrl';\r\n\r\n\r\nexport const fetchSavingsAccount = () => (dispatch) => {\r\n    \r\n    dispatch(savingsAccountLoading(true));\r\n\r\n    dispatch(addSavingsAccount(SAVINGS_ACCOUNT));\r\n}\r\n\r\nexport const fetchCheckingAccounts = () => (dispatch) => {\r\n    \r\n    dispatch(checkingAccountLoading(true));\r\n\r\n    dispatch(addCheckingAccount(CHECKING_ACCOUNTS));\r\n}\r\n\r\nexport const fetchCdAccounts = () => (dispatch) => {\r\n    \r\n    dispatch(cdAccountLoading(true));\r\n\r\n    dispatch(addCdAccount(CDACCOUNTS));\r\n}\r\n\r\nexport const fetchPersonalCheckingAccount = () => (dispatch) => {\r\n    \r\n    dispatch(personalCheckingAccountLoading(true));\r\n\r\n    dispatch(addPersonalCheckingAccount(PERSONAL_CHECKING_ACCOUNT));\r\n}\r\n\r\nexport const fetchDbaCheckingAccounts = () => (dispatch) => {\r\n    \r\n    dispatch(dbaCheckingAccountLoading(true));\r\n\r\n    dispatch(addDbaCheckingAccount(DBA_CHECKING_ACCOUNTS));\r\n}\r\n\r\nexport const savingsAccountFailed = (errmess) => ({\r\n    type: ActionTypes.SAVINGS_ACCOUNT_FAILED,\r\n    payload: errmess\r\n})\r\nexport const checkingAccountsFailed = (errmess) => ({\r\n    type: ActionTypes.CHECKING_ACCOUNTS_FAILED,\r\n    payload: errmess\r\n})\r\nexport const cdAccountsFailed = (errmess) => ({\r\n    type: ActionTypes.CDACCOUNT_FAILED,\r\n    payload: errmess\r\n})\r\nexport const personalCheckingAccountFailed = (errmess) => ({\r\n    type: ActionTypes.PERSONAL_CHECKING_ACCOUNT_FAILED,\r\n    payload: errmess\r\n})\r\nexport const dbaCheckingAccountsFailed = (errmess) => ({\r\n    type: ActionTypes.DBA_CHECKING_ACCOUNT_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addSavingsAccount  = (account) => ({\r\n    type: ActionTypes.ADD_SAVINGS_ACCOUNT,\r\n    payload: account\r\n})\r\n\r\nexport const addCheckingAccount  = (accounts) => ({\r\n    type: ActionTypes.ADD_CHECKING_ACCOUNTS,\r\n    payload: accounts\r\n})\r\n\r\nexport const addCdAccount  = (accounts) => ({\r\n    type: ActionTypes.ADD_CDACCOUNT,\r\n    payload: accounts\r\n})\r\n\r\nexport const addPersonalCheckingAccount  = (accounts) => ({\r\n    type: ActionTypes.ADD_PERSONAL_CHECKING_ACCOUNT,\r\n    payload: accounts\r\n})\r\n\r\nexport const addDbaCheckingAccount  = (accounts) => ({\r\n    type: ActionTypes.ADD_DBA_CHECKING_ACCOUNT,\r\n    payload: accounts\r\n})\r\n\r\nexport const savingsAccountLoading = () => ({\r\n    type: ActionTypes.SAVINGS_ACCOUNT_LOADING\r\n})\r\n\r\nexport const checkingAccountLoading = () => ({\r\n    type: ActionTypes.CHECKING_ACCOUNTS_LOADING\r\n})\r\n\r\nexport const cdAccountLoading = () => ({\r\n    type: ActionTypes.CDACCOUNT_LOADING\r\n})\r\n\r\nexport const personalCheckingAccountLoading = () => ({\r\n    type: ActionTypes.PERSONAL_CHECKING_ACCOUNT_LOADING\r\n})\r\n\r\nexport const dbaCheckingAccountLoading = () => ({\r\n    type: ActionTypes.DBA_CHECKING_ACCOUNT_LOADING\r\n})"]},"metadata":{},"sourceType":"module"}