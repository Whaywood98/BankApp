{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { SAVINGS_ACCOUNT } from '../shared/savingsAccount';\nimport { CHECKING_ACCOUNTS } from '../shared/checkingAccounts';\nimport { CDACCOUNTS } from '../shared/cdAccounts';\nimport { PERSONAL_CHECKING_ACCOUNT } from '../shared/personalCheckingAccount';\nimport { DBA_CHECKING_ACCOUNTS } from '../shared/dbaCheckingAccounts';\nimport { IRA } from '../shared/ira';\nimport baseUrl from '../shared/baseUrl';\nimport UserServices from '../services/UserServices';\nexport const fetchUser = () => dispatch => {\n  dispatch(userLoading(true));\n  return UserServices.getUser().then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(user => dispatch(addUser(user))).catch(error => dispatch(userFailed(error.message)));\n};\nexport const fetchSavingsAccount = () => dispatch => {\n  dispatch(savingsAccountLoading(true));\n  dispatch(addSavingsAccount(SAVINGS_ACCOUNT));\n};\nexport const fetchCheckingAccounts = () => dispatch => {\n  dispatch(checkingAccountLoading(true));\n  dispatch(addCheckingAccount(CHECKING_ACCOUNTS));\n};\nexport const fetchCdAccounts = () => dispatch => {\n  dispatch(cdAccountLoading(true));\n  dispatch(addCdAccount(CDACCOUNTS));\n};\nexport const fetchPersonalCheckingAccount = () => dispatch => {\n  dispatch(personalCheckingAccountLoading(true));\n  dispatch(addPersonalCheckingAccount(PERSONAL_CHECKING_ACCOUNT));\n};\nexport const fetchDbaCheckingAccounts = () => dispatch => {\n  dispatch(dbaCheckingAccountLoading(true));\n  dispatch(addDbaCheckingAccount(DBA_CHECKING_ACCOUNTS));\n};\nexport const userFailed = errmess => ({\n  type: ActionTypes.USER_FAILED,\n  payload: errmess\n});\nexport const savingsAccountFailed = errmess => ({\n  type: ActionTypes.SAVINGS_ACCOUNT_FAILED,\n  payload: errmess\n});\nexport const checkingAccountsFailed = errmess => ({\n  type: ActionTypes.CHECKING_ACCOUNTS_FAILED,\n  payload: errmess\n});\nexport const cdAccountsFailed = errmess => ({\n  type: ActionTypes.CDACCOUNT_FAILED,\n  payload: errmess\n});\nexport const personalCheckingAccountFailed = errmess => ({\n  type: ActionTypes.PERSONAL_CHECKING_ACCOUNT_FAILED,\n  payload: errmess\n});\nexport const dbaCheckingAccountsFailed = errmess => ({\n  type: ActionTypes.DBA_CHECKING_ACCOUNT_FAILED,\n  payload: errmess\n});\nexport const addUser = user => ({\n  type: ActionTypes.ADD_USER,\n  payload: user\n});\nexport const addSavingsAccount = account => ({\n  type: ActionTypes.ADD_SAVINGS_ACCOUNT,\n  payload: account\n});\nexport const addCheckingAccount = accounts => ({\n  type: ActionTypes.ADD_CHECKING_ACCOUNTS,\n  payload: accounts\n});\nexport const addCdAccount = accounts => ({\n  type: ActionTypes.ADD_CDACCOUNT,\n  payload: accounts\n});\nexport const addPersonalCheckingAccount = accounts => ({\n  type: ActionTypes.ADD_PERSONAL_CHECKING_ACCOUNT,\n  payload: accounts\n});\nexport const addDbaCheckingAccount = accounts => ({\n  type: ActionTypes.ADD_DBA_CHECKING_ACCOUNT,\n  payload: accounts\n});\nexport const userLoading = () => ({\n  type: ActionTypes.USER_LOADING\n});\nexport const savingsAccountLoading = () => ({\n  type: ActionTypes.SAVINGS_ACCOUNT_LOADING\n});\nexport const checkingAccountLoading = () => ({\n  type: ActionTypes.CHECKING_ACCOUNTS_LOADING\n});\nexport const cdAccountLoading = () => ({\n  type: ActionTypes.CDACCOUNT_LOADING\n});\nexport const personalCheckingAccountLoading = () => ({\n  type: ActionTypes.PERSONAL_CHECKING_ACCOUNT_LOADING\n});\nexport const dbaCheckingAccountLoading = () => ({\n  type: ActionTypes.DBA_CHECKING_ACCOUNT_LOADING\n});","map":{"version":3,"sources":["C:/users/willi/eclipse-workspace/Capstone/frontend/src/redux/ActionCreators.js"],"names":["ActionTypes","SAVINGS_ACCOUNT","CHECKING_ACCOUNTS","CDACCOUNTS","PERSONAL_CHECKING_ACCOUNT","DBA_CHECKING_ACCOUNTS","IRA","baseUrl","UserServices","fetchUser","dispatch","userLoading","getUser","then","response","ok","error","Error","status","statusText","errmess","message","json","user","addUser","catch","userFailed","fetchSavingsAccount","savingsAccountLoading","addSavingsAccount","fetchCheckingAccounts","checkingAccountLoading","addCheckingAccount","fetchCdAccounts","cdAccountLoading","addCdAccount","fetchPersonalCheckingAccount","personalCheckingAccountLoading","addPersonalCheckingAccount","fetchDbaCheckingAccounts","dbaCheckingAccountLoading","addDbaCheckingAccount","type","USER_FAILED","payload","savingsAccountFailed","SAVINGS_ACCOUNT_FAILED","checkingAccountsFailed","CHECKING_ACCOUNTS_FAILED","cdAccountsFailed","CDACCOUNT_FAILED","personalCheckingAccountFailed","PERSONAL_CHECKING_ACCOUNT_FAILED","dbaCheckingAccountsFailed","DBA_CHECKING_ACCOUNT_FAILED","ADD_USER","account","ADD_SAVINGS_ACCOUNT","accounts","ADD_CHECKING_ACCOUNTS","ADD_CDACCOUNT","ADD_PERSONAL_CHECKING_ACCOUNT","ADD_DBA_CHECKING_ACCOUNT","USER_LOADING","SAVINGS_ACCOUNT_LOADING","CHECKING_ACCOUNTS_LOADING","CDACCOUNT_LOADING","PERSONAL_CHECKING_ACCOUNT_LOADING","DBA_CHECKING_ACCOUNT_LOADING"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { SAVINGS_ACCOUNT } from '../shared/savingsAccount';\r\nimport { CHECKING_ACCOUNTS } from '../shared/checkingAccounts';\r\nimport { CDACCOUNTS } from '../shared/cdAccounts';\r\nimport { PERSONAL_CHECKING_ACCOUNT } from '../shared/personalCheckingAccount';\r\nimport { DBA_CHECKING_ACCOUNTS } from '../shared/dbaCheckingAccounts';\r\nimport { IRA } from '../shared/ira';\r\nimport baseUrl from '../shared/baseUrl';\r\nimport UserServices from '../services/UserServices';\r\n\r\n\r\nexport const fetchUser = () => (dispatch) => {\r\n    dispatch(userLoading(true));\r\n\r\n    return UserServices.getUser()\r\n            .then(response =>{\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n                error => {\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                })\r\n            .then(response => response.json())\r\n            .then(user => dispatch(addUser(user)))\r\n            .catch(error => dispatch(userFailed(error.message)));\r\n}\r\n\r\nexport const fetchSavingsAccount = () => (dispatch) => {\r\n    \r\n    dispatch(savingsAccountLoading(true));\r\n\r\n    dispatch(addSavingsAccount(SAVINGS_ACCOUNT));\r\n}\r\n\r\nexport const fetchCheckingAccounts = () => (dispatch) => {\r\n    \r\n    dispatch(checkingAccountLoading(true));\r\n\r\n    dispatch(addCheckingAccount(CHECKING_ACCOUNTS));\r\n}\r\n\r\nexport const fetchCdAccounts = () => (dispatch) => {\r\n    \r\n    dispatch(cdAccountLoading(true));\r\n\r\n    dispatch(addCdAccount(CDACCOUNTS));\r\n}\r\n\r\nexport const fetchPersonalCheckingAccount = () => (dispatch) => {\r\n    \r\n    dispatch(personalCheckingAccountLoading(true));\r\n\r\n    dispatch(addPersonalCheckingAccount(PERSONAL_CHECKING_ACCOUNT));\r\n}\r\n\r\nexport const fetchDbaCheckingAccounts = () => (dispatch) => {\r\n    \r\n    dispatch(dbaCheckingAccountLoading(true));\r\n\r\n    dispatch(addDbaCheckingAccount(DBA_CHECKING_ACCOUNTS));\r\n}\r\n\r\nexport const userFailed = (errmess) => ({\r\n    type: ActionTypes.USER_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const savingsAccountFailed = (errmess) => ({\r\n    type: ActionTypes.SAVINGS_ACCOUNT_FAILED,\r\n    payload: errmess\r\n})\r\nexport const checkingAccountsFailed = (errmess) => ({\r\n    type: ActionTypes.CHECKING_ACCOUNTS_FAILED,\r\n    payload: errmess\r\n})\r\nexport const cdAccountsFailed = (errmess) => ({\r\n    type: ActionTypes.CDACCOUNT_FAILED,\r\n    payload: errmess\r\n})\r\nexport const personalCheckingAccountFailed = (errmess) => ({\r\n    type: ActionTypes.PERSONAL_CHECKING_ACCOUNT_FAILED,\r\n    payload: errmess\r\n})\r\nexport const dbaCheckingAccountsFailed = (errmess) => ({\r\n    type: ActionTypes.DBA_CHECKING_ACCOUNT_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addUser = (user) => ({\r\n    type: ActionTypes.ADD_USER,\r\n    payload: user\r\n})\r\n\r\nexport const addSavingsAccount  = (account) => ({\r\n    type: ActionTypes.ADD_SAVINGS_ACCOUNT,\r\n    payload: account\r\n})\r\n\r\nexport const addCheckingAccount  = (accounts) => ({\r\n    type: ActionTypes.ADD_CHECKING_ACCOUNTS,\r\n    payload: accounts\r\n})\r\n\r\nexport const addCdAccount  = (accounts) => ({\r\n    type: ActionTypes.ADD_CDACCOUNT,\r\n    payload: accounts\r\n})\r\n\r\nexport const addPersonalCheckingAccount  = (accounts) => ({\r\n    type: ActionTypes.ADD_PERSONAL_CHECKING_ACCOUNT,\r\n    payload: accounts\r\n})\r\n\r\nexport const addDbaCheckingAccount  = (accounts) => ({\r\n    type: ActionTypes.ADD_DBA_CHECKING_ACCOUNT,\r\n    payload: accounts\r\n})\r\n\r\nexport const userLoading = () => ({\r\n    type: ActionTypes.USER_LOADING\r\n})\r\n\r\nexport const savingsAccountLoading = () => ({\r\n    type: ActionTypes.SAVINGS_ACCOUNT_LOADING\r\n})\r\n\r\nexport const checkingAccountLoading = () => ({\r\n    type: ActionTypes.CHECKING_ACCOUNTS_LOADING\r\n})\r\n\r\nexport const cdAccountLoading = () => ({\r\n    type: ActionTypes.CDACCOUNT_LOADING\r\n})\r\n\r\nexport const personalCheckingAccountLoading = () => ({\r\n    type: ActionTypes.PERSONAL_CHECKING_ACCOUNT_LOADING\r\n})\r\n\r\nexport const dbaCheckingAccountLoading = () => ({\r\n    type: ActionTypes.DBA_CHECKING_ACCOUNT_LOADING\r\n})"]},"metadata":{},"sourceType":"module"}